<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:basic="http://serena.com/dimensions/basic/1" xmlns:prj="http://serena.com/dimensions/projects/1" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://serena.com/dimensions/projects/1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import schemaLocation="dmwebservices_basic.xml" namespace="http://serena.com/dimensions/basic/1" />
  <xsd:simpleType name="ProjectStatus">
    <xsd:annotation>
      <xsd:documentation>
				Project Status - The LOCKED state prevents new Dimensions items being added to the project
			</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Locked" />
      <xsd:enumeration value="Unlocked" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ProjectRevisionType">
    <xsd:annotation>
      <xsd:documentation>
				Type of Project revision
			</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Branch" />
      <xsd:enumeration value="Trunk" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ProjectBranches">
    <xsd:annotation>
      <xsd:documentation>
				List of branches names within Project
			</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="Branch" type="xsd:string" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ProjectDeploymentModel">
    <xsd:annotation>
      <xsd:documentation>
				Project deployment model
			</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Manual" />
      <xsd:enumeration value="Automatic" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ProjectDeploymentMethod">
    <xsd:annotation>
      <xsd:documentation>
				Project deployment method
			</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Request" />
      <xsd:enumeration value="Baseline" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ProjectManagers">
    <xsd:annotation>
      <xsd:documentation>
				List of project managers
			</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="Manager" type="xsd:string" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NewProject">
    <xsd:annotation>
      <xsd:documentation>
				This object represents a Dimensions Project to be created. Use this objects when creating a new Dimensions Project.
			</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="projectSpec" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						&lt;project-spec&gt;
						Comprises: &lt;product-id&gt;:&lt;project-id&gt;
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="description" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						/DESCRIPTION=&lt;description&gt;
						Specifies the description to be attached to the project definition.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="type" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						/TYPE=&lt;type-name&gt;
						Specifies the type of the project. If this qualifier is not specified, the type name
						WORKSET is used.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="sourceProjectSpec" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						/WORKSET=&lt;project-spec&gt;
						Optionally specifies the project on which to base the new project.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="sourceBaselineSpec" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						/BASELINE=&lt;baseline-spec&gt;
						Optionally specifies the Dimensions baseline on which to base the new project.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="attributes" type="basic:AttributeArray">
        <xsd:annotation>
          <xsd:documentation>
						/ATTRIBUTES=(&lt;attr1&gt;,attr2,:)
						Specifies the user-defined attribute values for this project.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="status" type="prj:ProjectStatus">
        <xsd:annotation>
          <xsd:documentation>
						/STATUS=&lt;status&gt;
						Allows the new project to be created in either a LOCKED or UNLOCKED (default) state.
						The LOCKED state prevents new Dimensions items being added to the project
						(baselining is likely to occur in this state).
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="revisionType" type="prj:ProjectRevisionType">
        <xsd:annotation>
          <xsd:documentation>
						/BRANCH
						Optional qualifier to adopt "branching" for the item revision scheme. This means that
						if an item-revision is at revision maint#5, and the users decide to stay on this maint
						branch, then subsequent revisions will be maint#5.1, maint#5.2, maint#5.3 etc.
						/TRUNK
						Optional qualifier to adopt "trunking" for the item revision scheme. This means that if
						an item-revision is at revision maint#5, and the users decide to stay on this maint
						branch, then subsequent revisions will be maint#6, maint#7, maint#8 etc.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="autoRevision" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
						/AUTO_REV
						Optional qualifier to tell Dimensions to automatically generate a new revision each
						time an item-spec is edited/updated.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Branches" type="prj:ProjectBranches">
        <xsd:annotation>
          <xsd:documentation>
						/VALID_BRANCHES=(&lt;branch-id1&gt;,&lt;branch-id2&gt;,:)
						Identifies one or more branches - each previously defined in a Define (Item) Version
						Branches (DVB) command - that are to be valid for new item revisions created in this
						new project. If this parameter is omitted, an empty list is created - the Set Project
						Attributes (SWS) command can subsequently be used, if desired, to associate a valid
						list of branch-ids to the project created here.
						This list defines the branches on which newly created item revisions can be placed.
						If the project is defined with one or more valid branches, every new item revision in
						the new project must use one of these branch-ids.
						If the project is defined with no valid branches, new revisions with no branch-ids in
						them can continue to be used
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="defaultBranch" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						/DEFAULT_BRANCH=&lt;branch-id&gt;
						Selects, from the valid list of branch-ids, the &lt;branch-id&gt; to be the default branch. If
						a default branch-id is not defined, the first branch-id in the valid-list of branch-ids is
						taken as the default.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="deploymentModel" type="prj:ProjectDeploymentModel">
        <xsd:annotation>
          <xsd:documentation>
						/DEPLOYMENT_MODEL=MANUAL or /DEPLOYMENT_MODEL=AUTOMATIC
						Specifies whether the project uses a manual or automatic deployment model.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="deploymentMethod" type="prj:ProjectDeploymentMethod">
        <xsd:annotation>
          <xsd:documentation>
						/DEPLOYMENT_METHOD=REQUEST or /DEPLOYMENT_METHOD=BASELINE
						Specifies the deployment method for creating the project.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="pathControl" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
						/[NO]PATH_CONTROL
						Specifies whether a request is required to perform refactoring operations in this
						project.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="copyOnDeploy" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
						/COPY_ON_DEPLOY
						Optional qualifier that specifies whether files that are deployed from an earlier stage
						to a newer stage will be copied between areas rather than moved (they are moved by default).
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="keepStage" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>
						/KEEP_STAGE
						When creating a project based on another project, specify this optional qualifier to
						avoid resetting the stage of item revisions in the new project to the initial stage and to
						instead keep the stage of the item revisions from the source project. The default
						behavior (when this qualifier is not specified) is to reset the stage of all items in the
						new project to the initial stage. Note that this qualifier can only be used when the new
						project uses the manual deployment model.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProjectDetails">
    <xsd:annotation>
      <xsd:documentation>
				This object represents a Dimensions Project details.
			</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="spec" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						&lt;project-spec&gt;
						Comprises: &lt;product-id&gt;:&lt;project-id&gt;
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="status" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						Specifies the project status.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="owner" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						Specifies the project owner.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="type" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						Specifies if it is project of stream.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="managers" type="prj:ProjectManagers">
        <xsd:annotation>
          <xsd:documentation>
						Optionally specifies the list of project managers.
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="parentProjectSpec" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>
						Optionally specifies the parent project.
						Comprises: &lt;product-id&gt;:&lt;project-id&gt;
					</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>